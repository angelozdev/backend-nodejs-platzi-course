// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  category    Category         @relation(fields: [categoryId], references: [id])
  categoryId  Int
  createdAt   DateTime         @default(now())
  description String?          @db.Text
  id          Int              @id @default(autoincrement())
  image       String?
  name        String           @db.VarChar(255)
  orders      OrderOnProduct[]
  price       Float
  updatedAt   DateTime         @updatedAt
}

model User {
  createdAt DateTime @default(now())
  email     String   @unique @db.VarChar(255)
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  Order     Order[]
  password  String   @db.VarChar(255)
  role      Role     @relation(fields: [roleId], references: [id])
  roleId    Int
  updatedAt DateTime @updatedAt
}

model Role {
  createdAt DateTime @default(now())
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  updatedAt DateTime @updatedAt
  users     User[]
}

model Category {
  createdAt DateTime  @default(now())
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  products  Product[]
  updatedAt DateTime  @updatedAt
}

model Order {
  createdAt DateTime         @default(now())
  id        Int              @id @default(autoincrement())
  products  OrderOnProduct[]
  updatedAt DateTime         @updatedAt
  user      User             @relation(fields: [userId], references: [id])
  userId    Int
}

model OrderOnProduct {
  createdAt DateTime @default(now())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  updatedAt DateTime @updatedAt

  @@id([orderId, productId])
}
